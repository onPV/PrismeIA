user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /dev/stdout;
    error_log /dev/stderr;

    server {
        listen 80;
        server_name _;
        root /var/www/html/public;
        index index.php;

        # Health check pour Render
        location = /healthz {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }

        # Intercepte et gère les requêtes CORS "preflight" (OPTIONS)
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                return 204;
            }

            try_files $uri /index.php$is_args$args;
        }

        # PHP handler
        location ~ ^/index\.php(/|$) {
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $document_root;
            internal;
        }

        # Refus de tout autre accès PHP direct
        location ~ \.php$ {
            return 404;
        }
    }
}