# backend/Dockerfile.prod

# --- 1. Build Composer ---
FROM composer:2 as composer_builder
WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install --no-scripts --optimize-autoloader
# installer toutes les dépendances meme celle de dev -> --no-dev



# --- 2. Build Final App ---
FROM php:8.2-fpm-alpine as app

RUN apk add --no-cache \
    nginx \
    libzip-dev \
    postgresql-dev \
    icu-dev

RUN docker-php-ext-install pdo pdo_pgsql zip intl opcache

WORKDIR /var/www/html

# Dépendances PHP
COPY --from=composer_builder /app/vendor/ ./vendor/
# Code Symfony
COPY . .

# Config Nginx & PHP
COPY docker/prod/nginx.conf /etc/nginx/nginx.conf
COPY docker/prod/php-fpm-pool.conf /usr/local/etc/php-fpm.d/zz-docker.conf
RUN rm -rf /etc/nginx/http.d/default.conf

# Script d'init
COPY ./entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Permissions sur var/
RUN mkdir -p var/cache var/log \
  && chown -R www-data:www-data var \
  && chmod -R 775 var

# Ports exposés
EXPOSE 80

# ✅ Utilise entrypoint.sh comme point d'entrée unique
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
