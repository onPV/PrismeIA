# backend/Dockerfile.dev
FROM php:8.3-fpm-alpine

# Définir le répertoire de travail dans le conteneur
WORKDIR /var/www/html

# Installer les dépendances système nécessaires
RUN apk add --no-cache \
    postgresql-dev \
    git \
    curl \
    php83-cli \
    php83-ctype \
    php83-curl \
    php83-dom \
    php83-fileinfo \
    php83-iconv \
    php83-intl \
    php83-mbstring \
    php83-pdo \
    php83-pdo_pgsql \
    php83-pecl-apcu \
    php83-session \
    php83-xml \
    php83-zip \
    && rm -rf /var/cache/apk/* # Nettoie le cache après installation

# Installer Composer globalement
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# ACTIVER LES EXTENSIONS PHP MANQUANTES (IMPORTANT POUR PDO_PGSQL)
RUN docker-php-ext-install pdo pdo_pgsql

# Copier composer.json et composer.lock AVANT le reste du code.
COPY composer.json composer.lock ./

# Vider le cache de Composer pour forcer une réinstallation propre
RUN composer clear-cache # <-- AJOUTE CETTE LIGNE !

# Installer les dépendances Composer du projet.
RUN composer install --no-interaction --prefer-dist --no-scripts

# COPIER LE RESTE DU CODE DE L'APPLICATION APRÈS L'INSTALLATION DES DÉPENDANCES.
COPY . .

# NOUVEAU : Définir la variable d'environnement MAILER_DSN directement dans l'image
ENV MAILER_DSN="smtp://47cd2f5026438c:242fcbf79f98ad@sandbox.smtp.mailtrap.io:2525"
ENV APP_ENV=dev

# Exposer le port PHP-FPM
EXPOSE 9000

# Commande par défaut pour lancer PHP-FPM
CMD ["php-fpm"]